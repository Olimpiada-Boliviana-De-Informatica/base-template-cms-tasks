name: Import TPS format - MAIN
on:
  push:
    branches:
      - "main"
    paths:
      - tasks/**
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEV_SSH_SECRET }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ vars.DEV_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install TPS
        run: |
          sudo apt-get update
          sudo apt-get install -y dos2unix zip make g++
          sudo bash -c "$(curl -fsSL https://raw.githubusercontent.com/ioi-2017/tps/master/online-installer/install.sh)"  || true

      - name: Generate and compres all tasks in zip format
        run: |
          set +e
          ls -lha
          mkdir -p cms
          for dir in $(find tasks -maxdepth 1 -type d -not -path '*/\.*' -not -path './cms' -not -path '..commons' -not -path '.'); do
          if [ -d "$dir" ] && [ "$(basename "$dir")" != "tasks" ]; then
              echo "Processing directory: $dir ................."
              rm "tasks/$(basename "$dir")"/*.zip
              ./scripts/task-prepare-folder.sh "$(basename "$dir")"
              ./scripts/task-gen-cases.sh "$(basename "$dir")"
              ./scripts/task-gen-zip.sh "$(basename "$dir")"
              cp "tasks/$(basename "$dir")"/*.zip cms
            fi
          done

      - name: Clean and Create dataset folder from the remote server
        run: ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} "rm -rf dataset && mkdir dataset || mkdir dataset"

      - name: Copy all cms tasks to remote server
        run: |
          scp -r cms ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }}:dataset/

      - name: Import Tasks
        run: |
              ssh ${{ vars.DEV_SSH_USERNAME }}@${{ vars.DEV_SSH_HOST }} 'bash -s' <<'ENDSSH'
              set +e

               #List all statements in zip format
               cd dataset/cms
               for dir in $(find -name '*.zip'); do
                 unzip $dir;
               done

               for dir in $(find -maxdepth 1 -type d -not -path '.'); do
                  if [ -d "$dir" ]; then
                    /opt/.venv/bin/cmsImportTask -L tps_task "$(basename "$dir")" --update
                    for lang_file in $(find "$dir/statements/" -maxdepth 1 -type f); do
                 			lang_code=$(basename "$lang_file" .pdf)
                      /opt/.venv/bin/cmsAddStatement --overwrite "$(basename "$dir")" "$lang_code" "$(basename "$dir")/statements/$lang_code.pdf"
               	  	done
                  fi
               done
              ENDSSH

